# Experiment
n_jobs: 20
log_loss_steps: 50 #100 # set to 0 to disable loss logging
save_samples_steps: 50 #100 # set to 0 to disable saving samples
save_summaries_steps: 50 # set to 0 to disable saving summaries
save_checkpoint_steps: 50 #10000 # set to 0 to disable saving checkpoints
evaluate_steps: 50 #100 # set to 0 to disable evaluation

# Data
data_source: 'npy' # 'sa', 'npy', 'npz'
data_filename: './data/midi_compiled.npy'
use_random_transpose: false # randomly transpose the piano-rolls at training
use_train_test_split: false # split the piano-rolls at training

# Training
steps: 10000 #50000
batch_size: 32 #64
n_dis_updates_per_gen_update: 5

# Optimizers
initial_learning_rate: 0.001
use_learning_rate_decay: true
learning_rate_schedule:
  start: 9000 #45000
  end: ~
  end_value: 0.0
adam:
  beta1: 0.5
  beta2: 0.9

# Losses
gan_loss_type: wasserstein # nonsaturating, classic, wasserstein, hinge
use_gradient_penalties: true

# Slope annealing (for binary neurons only)
use_slope_annealing: false
slope_schedule: # start_value is fixed to 1.0
  end_value: 5.0
  start: 2000 #10000
  end: ~

# Sampling
sample_grid: [8, 8]
save_array_samples: true
save_image_samples: true
save_pianoroll_samples: true
midi:
  lowest_pitch: 24 # the lowest pitch of the piano-rolls
  programs: [0, 0, 25, 33, 48]
  is_drums: [1, 0, 0, 0, 0]
  tempo: 120 #100 # in bpm
colormap:
  - [1., 0., 0.]
  - [1., .5, 0.]
  - [0., 1., 0.]
  - [0., 0., 1.]
  - [0., .5, 1.]
